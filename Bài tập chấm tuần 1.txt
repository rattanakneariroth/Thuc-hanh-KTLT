//Bai 1.1
#include <stdio.h>

int main() {
    int x, y, z;
    int * ptr;
    printf("Enter three integers: ");
    scanf("%d %d %d", &x, &y, &z);
    printf("\nThe three integers are:\n");
    ptr = &x;
    printf("x = %d\n", *ptr);

    ptr = &y;
    printf("y = %d\n", *ptr);

    ptr = &z;
    printf("z = %d\n", *ptr);
    return 0;
}

//Bai 1.3
#include <stdio.h>
int main()
{
    int x, y, z;
    int *ptr;
    scanf("%d %d %d", &x, &y, &z);
    printf("Here are the values of x, y, and z:\n");
    printf("%d %d %d\n", x, y, z);

    ptr = &x;
    *ptr += 100;
    ptr = &y;
    *ptr += 100;
    ptr = &z;
    *ptr += 100;
    
    printf("Once again, here are the values of x, y, and z:\n");
    printf("%d %d %d\n", x, y, z);
    return 0;
}   


//Bai 1.4
#include <stdio.h>
// Bai 4
int counteven(int *arr, int size) {
    int count = 0;
    for (int i=0; i<size; i++) {
        if ((*(arr+i)%2) == 0) {
            // printf("%d ", *(arr+i));
            count++;
        }
    }
    return count;
}

//Bai 1.5

double* maximum(double* a, int size){
    double *max;
    int i;
    max = a;
    if (a==NULL) return NULL;
    max = &a[0];
    
    for ( i = 1; i < size; i++) {
        if (a[i] > *max){
        	max = &a[i];
		}
    }
    
  
    return max;
}

//Bai 1.6
//Bai 6
#include <stdio.h>
void reversearray(int arr[], int size){
    int l = 0, r = size - 1, tmp;
    for (int i=0; i<=(l+r)/2; ++i) {
        tmp = arr[l+i];
        arr[l+i] = arr[r-i];
        arr[r-i] = tmp;
    }
}
void ptr_reversearray(int *arr, int size){
    int l = 0, r = size - 1, tmp;
    for (int i=l; i<=(l+r)/2; ++i) {
        tmp = *(arr+(l+i));
        *(arr+l+i) = *(arr+r-i);
        *(arr+r-i) = tmp;
    }
}

//Bai 1.7

#include <stdio.h>
#include <stdlib.h>

int *a;
int n, tmp;

int main(){
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    
    //#Allocate memory
    a = (int*)malloc(n*sizeof(int));    
    
    for(int i = 0; i < n; i++)
        scanf("%d", a + i); 
    
    printf("The input array is: \n");
    for(int i = 0; i < n; i++)
        printf("%d ", *(a + i));
    printf("\n");
    
    //#Sort array
    for (int i = 0; i < n; i++) { 
        for (int j = i + 1; j < n; j++) {
            if (*(a + j) < *(a + i)) { 
                int t = *(a + i); 
                *(a + i) = *(a + j); 
                *(a + j) = t; 
            } 
        } 
    } 
    
    printf("The sorted array is: \n");
    for(int i = 0; i < n; i++)
        printf("%d ", *(a + i));
    printf("\n");
    
    free(a);
    return 0;
}

//Bai 1.8

#include <iostream>
using namespace std;

void allocate_mem(int ***mt, int m, int n){
    *mt = new int * [m];
    for(int i=0 ; i<m ; i++){
    	*(*mt+i) = new int[n];
	}
}

void input(int **mt, int m, int n){
    //#Input elements of the matrix
    h
    for(int i = 0 ;i < m ;i++){
    	for(int j=0 ; j<n ;j++){
    		printf("mt[%d][%d] = ",i,j);
    		scanf("%d",(*(mt+i)+j));
		}
	}
}

void output(int **mt, int m, int n){
    //# Print all elements of the matrix
    for(int i=0; i<m ; i++){
    	for(int j=0; j < n ;j++){
    		cout << *(*(mt+i)+j) << " ";
		}
        cout << endl;
	}
}

int process(int **mt, int m, int n){
    int tong = 0;
    //# Calculate the sum of all even elements in the matrix
    for(int i=0; i<m ; i++){
    	for(int j=0; j<n ;j++){
    		if(mt[i][j] % 2 == 0) {
    			tong += *(*(mt+i)+j);
			}
		}
	}
    
    return tong;
}

void free_mem(int **mt, int m, int n){
    //# Free memory
    for(int i=0;i<m;i++){
    	delete[] mt[i];
	}
	delete[] mt;
}

int main(){
    int m, n, **mt;
    printf("Enter m, n = ");
    scanf("%d%d", &m, &n);
    allocate_mem(&mt, m, n);
    input(mt, m, n);
    output(mt, m, n);
    printf("The sum of all even elements is %d \n", process(mt, m, n));
    free_mem(mt, m, n);
    return 0;
}ohelli
